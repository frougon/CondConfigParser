-*- coding: utf-8 -*-

Packaging from a release tarball
================================

Packaging from an official release tarball should be fairly straightforward,
as every source distribution should contain a ChangeLog file that is ready to
use. The rest of this file mainly concerns developers and people wanting to
package CondConfigParser from a clone of the Git repository.


Management of the ChangeLog file
================================

The ChangeLog file is not part of the Git repository, it is automatically
generated from the Git log with the gitlog-to-changelog[1] program. But it
must be present in every released tarball or package!

  [1] https://git.savannah.gnu.org/gitweb/?p=gnulib.git;a=blob_plain;f=build-aux/gitlog-to-changelog

In previous releases, setup.py contained code that automatically ran
gitlog-to-changelog to generate a ChangeLog file from the Git repository, if
it was run from a Git repository. However the current trend now is that Python
build systems let developers provide metadata but not code, so
CondConfigParser has no setup.py anymore. If you package it from a clone of
its Git repository, you now have to run gitlog-to-changelog[1] yourself.


Packaging from a clone of the Git repository
============================================

If you want to prepare a package from a clone of the Git repository, you
should:

  - Make sure the __version__ variable in src/condconfigparser/__init__.py
    indicates a Git snapshot, with something like:

      __version__ = "1.0.5+git20150109"

    Réf.: https://packaging.python.org/en/latest/specifications/version-specifiers/#local-version-identifiers

  - Install gitlog-to-changelog (single-file Perl script, see above for the
    download location). You may have to replace the first lines of shell+Perl
    crap with a proper shebang line (such as "#! /usr/bin/perl").

  - cd ⟨repository root directory⟩

  - Regenerate the 'ChangeLog' file:

      gitlog-to-changelog --format=%s%n%n%b%n >ChangeLog

  - Generate a Python source distribution of CondConfigParser:

      python3 -m build
